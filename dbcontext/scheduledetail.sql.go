// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: scheduledetail.sql

package dbcontext

import (
	"context"
)

const createScheduleDetail = `-- name: CreateScheduleDetail :one
Insert Into ScheduleDetail (
    schedule_id,
    schedule_block_id
) values (?, ?)
Returning id
`

type CreateScheduleDetailParams struct {
	ScheduleID      int64
	ScheduleBlockID int64
}

func (q *Queries) CreateScheduleDetail(ctx context.Context, arg CreateScheduleDetailParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, createScheduleDetail, arg.ScheduleID, arg.ScheduleBlockID)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const deleteScheduleDetail = `-- name: DeleteScheduleDetail :exec
Delete from ScheduleDetail
where id = ?
`

func (q *Queries) DeleteScheduleDetail(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteScheduleDetail, id)
	return err
}

const getScheduleDetail = `-- name: GetScheduleDetail :one
select id, schedule_id, schedule_block_id 
from ScheduleDetail
where id = ?
limit 1
`

func (q *Queries) GetScheduleDetail(ctx context.Context, id int64) (ScheduleDetail, error) {
	row := q.db.QueryRowContext(ctx, getScheduleDetail, id)
	var i ScheduleDetail
	err := row.Scan(&i.ID, &i.ScheduleID, &i.ScheduleBlockID)
	return i, err
}

const updateScheduleDetail = `-- name: UpdateScheduleDetail :exec
Update ScheduleDetail
set schedule_id = ?, schedule_block_id = ?
where id = ?
`

type UpdateScheduleDetailParams struct {
	ScheduleID      int64
	ScheduleBlockID int64
	ID              int64
}

func (q *Queries) UpdateScheduleDetail(ctx context.Context, arg UpdateScheduleDetailParams) error {
	_, err := q.db.ExecContext(ctx, updateScheduleDetail, arg.ScheduleID, arg.ScheduleBlockID, arg.ID)
	return err
}
